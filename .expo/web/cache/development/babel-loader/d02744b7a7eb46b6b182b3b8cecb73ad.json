{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nexport var isOrientationLandscape = function isOrientationLandscape(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  return width > height;\n};\nexport default function withDimensions(WrappedComponent) {\n  var EnhancedComponent = function (_React$Component) {\n    _inherits(EnhancedComponent, _React$Component);\n    var _super = _createSuper(EnhancedComponent);\n    function EnhancedComponent(props) {\n      var _this;\n      _classCallCheck(this, EnhancedComponent);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"handleOrientationChange\", function (_ref2) {\n        var window = _ref2.window;\n        var width = window.width,\n          height = window.height;\n        _this.setState({\n          dimensions: {\n            width: width,\n            height: height\n          },\n          isLandscape: isOrientationLandscape({\n            width: width,\n            height: height\n          })\n        });\n      });\n      var _Dimensions$get = Dimensions.get('window'),\n        _width = _Dimensions$get.width,\n        _height = _Dimensions$get.height;\n      _this.state = {\n        dimensions: {\n          width: _width,\n          height: _height\n        },\n        isLandscape: isOrientationLandscape({\n          width: _width,\n          height: _height\n        })\n      };\n      return _this;\n    }\n    _createClass(EnhancedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        Dimensions.addEventListener('change', this.handleOrientationChange);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        Dimensions.removeEventListener('change', this.handleOrientationChange);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(WrappedComponent, _extends({}, this.props, this.state));\n      }\n    }]);\n    return EnhancedComponent;\n  }(React.Component);\n\n  _defineProperty(EnhancedComponent, \"displayName\", \"withDimensions(\".concat(WrappedComponent.displayName, \")\"));\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}","map":{"version":3,"sources":["withDimensions.tsx"],"names":["React","hoistNonReactStatic","isOrientationLandscape","width","height","withDimensions","WrappedComponent","EnhancedComponent","Component","displayName","constructor","props","Dimensions","get","state","dimensions","isLandscape","componentDidMount","addEventListener","handleOrientationChange","componentWillUnmount","removeEventListener","window","setState","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAEA,OAAOC,mBAAP,MAAgC,yBAAhC;AAYA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB;EAAA,IAAMC,KAAF,QAAEA,KAAF;IAASC,MAAAA,QAAAA,MAAAA;EAAAA,OAC9CD,KAAK,GAAGC,MADH;AAAA;AAGP,eAAe,SAASC,cAAT,CACbC,gBADa,EAEgE;EAAA,IACvEC,iBAAN;IAAA;IAAA;IAGEG,2BAAYC,KAAD,EAAe;MAAA;MAAA;MACxB,0BAAMA,KAAN;MADwB,eAAA,gCAAA,yBAAA,EAkBA,iBAAwC;QAAA,IAArCW,MAAAA,SAAAA,MAAAA;QAC3B,IAAQnB,KAAF,GAAoBmB,MAA1B,CAAQnB,KAAF;UAASC,MAAAA,GAAWkB,MAA1B,CAAelB,MAAAA;QACf,MAAKmB,QAAL,CAAc;UACZR,UAAU,EAAE;YAAEZ,KAAF,EAAEA,KAAF;YAASC,MAAAA,EAAAA;UAAT,CADA;UAEZY,WAAW,EAAEd,sBAAsB,CAAC;YAAEC,KAAF,EAAEA,KAAF;YAASC,MAAAA,EAAAA;UAAT,CAAD;QAFvB,CAAd,CAAA;MAID,CAxByB,CAAA;MAGxB,sBAA0BQ,UAAU,CAACC,GAAXD,CAAe,QAAfA,CAA1B;QAAQT,MAAF,mBAAEA,KAAK;QAAEC,OAAAA,mBAAAA,MAAM;MACrB,MAAKU,KAAL,GAAa;QACXC,UAAU,EAAE;UAAEZ,KAAK,EAALA,MAAF;UAASC,MAAM,EAANA;QAAT,CADD;QAEXY,WAAW,EAAEd,sBAAsB,CAAC;UAAEC,KAAK,EAALA,MAAF;UAASC,MAAM,EAANA;QAAT,CAAD;MAFxB,CAAb;MAAA;IAID;IAAA;MAAA;MAAA,OAEDa,6BAAoB;QAClBL,UAAU,CAACM,gBAAXN,CAA4B,QAA5BA,EAAsC,IAAA,CAAKO,uBAA3CP,CAAAA;MACD;IAAA;MAAA;MAAA,OAEDQ,gCAAuB;QACrBR,UAAU,CAACS,mBAAXT,CAA+B,QAA/BA,EAAyC,IAAA,CAAKO,uBAA9CP,CAAAA;MACD;IAAA;MAAA;MAAA,OAUDY,kBAAS;QAEP,OAAO,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsB,IAAA,CAAKb,KAA3B,EAAsC,IAAA,CAAKG,KAA3C,CAAA,CAAP;MACD;IAAA;IAAA;EAAA,EAhC6Bd,KAAK,CAACQ,SAAtC;;EAD6E,eAAA,CACvED,iBADuE,EAAA,aAAA,EAAA,iBAAA,CAAA,MAAA,CAEpCD,gBAAgB,CAACG,WAFmB,EAAA,GAAA,CAAA,CAAA;EAqC7E,OAAOR,mBAAmB,CAACM,iBAAD,EAAoBD,gBAApB,CAA1B;AACD","sourcesContent":["import * as React from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\ntype DimensionsType = {\n  width: number;\n  height: number;\n};\n\ntype InjectedProps = {\n  dimensions: DimensionsType;\n  isLandscape: boolean;\n};\n\nexport const isOrientationLandscape = ({ width, height }: DimensionsType) =>\n  width > height;\n\nexport default function withDimensions<Props extends InjectedProps>(\n  WrappedComponent: React.ComponentType<Props>\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    constructor(props: Props) {\n      super(props);\n\n      const { width, height } = Dimensions.get('window');\n      this.state = {\n        dimensions: { width, height },\n        isLandscape: isOrientationLandscape({ width, height }),\n      };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      const { width, height } = window;\n      this.setState({\n        dimensions: { width, height },\n        isLandscape: isOrientationLandscape({ width, height }),\n      });\n    };\n\n    render() {\n      // @ts-ignore\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  // @ts-ignore\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}