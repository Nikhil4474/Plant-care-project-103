{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"getLabelText\", \"getAccessibilityLabel\", \"getTestID\", \"renderIcon\", \"onTabPress\", \"onTabLongPress\", \"screenProps\", \"tabBarComponent\", \"tabBarOptions\", \"lazyPlaceholderComponent\", \"pagerComponent\", \"navigation\", \"descriptors\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport { TabView } from 'react-native-tab-view';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport MaterialTopTabBar from \"../views/MaterialTopTabBar\";\nvar MaterialTabView = function (_React$PureComponent) {\n  _inherits(MaterialTabView, _React$PureComponent);\n  var _super = _createSuper(MaterialTabView);\n  function MaterialTabView() {\n    var _this;\n    _classCallCheck(this, MaterialTabView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"renderTabBar\", function (props) {\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n      var _this$props = _this.props,\n        navigation = _this$props.navigation,\n        getLabelText = _this$props.getLabelText,\n        getAccessibilityLabel = _this$props.getAccessibilityLabel,\n        getTestID = _this$props.getTestID,\n        renderIcon = _this$props.renderIcon,\n        onTabPress = _this$props.onTabPress,\n        onTabLongPress = _this$props.onTabLongPress,\n        _this$props$tabBarCom = _this$props.tabBarComponent,\n        TabBarComponent = _this$props$tabBarCom === void 0 ? MaterialTopTabBar : _this$props$tabBarCom,\n        tabBarPosition = _this$props.tabBarPosition,\n        tabBarOptions = _this$props.tabBarOptions,\n        screenProps = _this$props.screenProps;\n      if (TabBarComponent === null || !tabBarVisible) {\n        return null;\n      }\n      return React.createElement(TabBarComponent, _extends({}, tabBarOptions, props, {\n        tabBarPosition: tabBarPosition,\n        screenProps: screenProps,\n        navigation: navigation,\n        getLabelText: getLabelText,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getTestID: getTestID,\n        renderIcon: renderIcon,\n        onTabPress: onTabPress,\n        onTabLongPress: onTabLongPress\n      }));\n    });\n    return _this;\n  }\n  _createClass(MaterialTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        getLabelText = _this$props2.getLabelText,\n        getAccessibilityLabel = _this$props2.getAccessibilityLabel,\n        getTestID = _this$props2.getTestID,\n        renderIcon = _this$props2.renderIcon,\n        onTabPress = _this$props2.onTabPress,\n        onTabLongPress = _this$props2.onTabLongPress,\n        screenProps = _this$props2.screenProps,\n        tabBarComponent = _this$props2.tabBarComponent,\n        tabBarOptions = _this$props2.tabBarOptions,\n        lazyPlaceholderComponent = _this$props2.lazyPlaceholderComponent,\n        pagerComponent = _this$props2.pagerComponent,\n        navigation = _this$props2.navigation,\n        descriptors = _this$props2.descriptors,\n        rest = _objectWithoutProperties(_this$props2, _excluded);\n      var state = navigation.state;\n      var route = state.routes[state.index];\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var swipeEnabled =\n      options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n      if (typeof swipeEnabled === 'function') {\n        swipeEnabled = swipeEnabled(state);\n      }\n      return React.createElement(TabView, _extends({}, rest, {\n        navigationState: navigation.state,\n        swipeEnabled: swipeEnabled,\n        renderTabBar: this.renderTabBar,\n        renderLazyPlaceholder: lazyPlaceholderComponent !== undefined ? function (props) {\n          return React.createElement(lazyPlaceholderComponent, props);\n        } : undefined,\n        renderPager: pagerComponent !== undefined ? function (props) {\n          return React.createElement(pagerComponent, props);\n        } : undefined\n      }));\n    }\n  }]);\n  return MaterialTabView;\n}(React.PureComponent);\nexport default createTabNavigator(MaterialTabView);","map":{"version":3,"sources":["createMaterialTopTabNavigator.tsx"],"names":["React","TabView","createTabNavigator","MaterialTopTabBar","MaterialTabView","PureComponent","props","state","navigation","route","routes","index","descriptors","descriptor","key","options","tabBarVisible","getLabelText","getAccessibilityLabel","getTestID","renderIcon","onTabPress","onTabLongPress","tabBarComponent","TabBarComponent","tabBarPosition","tabBarOptions","screenProps","render","lazyPlaceholderComponent","pagerComponent","rest","swipeEnabled","renderTabBar","undefined","createElement"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport MaterialTopTabBar from '../views/MaterialTopTabBar';\nimport {\n  NavigationTabProp,\n  NavigationMaterialTabOptions,\n  MaterialTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Route = {\n  key: string;\n  routeName: string;\n};\n\ntype Config = {\n  keyboardDismissMode?: 'none' | 'on-drag';\n  swipeEnabled?: boolean;\n  swipeDistanceThreshold?: number;\n  swipeVelocityThreshold?: number;\n  initialLayout?: { width?: number; height?: number };\n  lazy?: boolean;\n  lazyPlaceholderComponent?: React.ComponentType<{ route: Route }>;\n  pagerComponent?: React.ComponentType<\n    Parameters<React.ComponentProps<typeof TabView>['renderPager']>[0]\n  >;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: MaterialTabBarOptions;\n  tabBarPosition?: 'top' | 'bottom';\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    onSwipeStart?: () => void;\n    onSwipeEnd?: () => void;\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\nclass MaterialTabView extends React.PureComponent<Props> {\n  private renderTabBar = (props: SceneRendererProps) => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      navigation,\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions,\n      screenProps,\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        {...props}\n        tabBarPosition={tabBarPosition}\n        screenProps={screenProps}\n        navigation={navigation}\n        getLabelText={getLabelText}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n      />\n    );\n  };\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      screenProps,\n      tabBarComponent,\n      tabBarOptions,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      lazyPlaceholderComponent,\n      pagerComponent,\n      navigation,\n      descriptors,\n      ...rest\n    } = this.props;\n\n    const { state } = navigation;\n    const route = state.routes[state.index];\n\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled =\n      // @ts-ignore\n      options.swipeEnabled == null\n        ? this.props.swipeEnabled\n        : (options as any).swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    return (\n      <TabView\n        {...rest}\n        navigationState={navigation.state}\n        swipeEnabled={swipeEnabled}\n        renderTabBar={this.renderTabBar}\n        renderLazyPlaceholder={\n          lazyPlaceholderComponent !== undefined\n            ? (props) => React.createElement(lazyPlaceholderComponent, props)\n            : undefined\n        }\n        renderPager={\n          pagerComponent !== undefined\n            ? (props) => React.createElement(pagerComponent, props)\n            : undefined\n        }\n      />\n    );\n  }\n}\n\nexport default createTabNavigator<Config, NavigationMaterialTabOptions, Props>(\n  MaterialTabView\n);\n"]},"metadata":{},"sourceType":"module"}